<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="Haushaltsbuch.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link href="https://cdn.jsdelivr.net/npm/beercss@3.7.8/dist/cdn/beer.min.css" rel="stylesheet">
    <script type="module" src="https://cdn.jsdelivr.net/npm/beercss@3.7.8/dist/cdn/beer.min.js"></script>
    <script type="module" src="https://cdn.jsdelivr.net/npm/material-dynamic-colors@1.1.2/dist/cdn/material-dynamic-colors.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <HeadOutlet />
</head>

<body class="dark">
    <Routes />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>

<script>
    function cacheUserId(userId) {
        localStorage.setItem("UserId", userId);
    }

    function getUserId() {
        return localStorage.getItem("UserId");
    }

    function deleteUserId() {
        localStorage.removeItem("UserId");
    }
    window.renderExpenseChart = (categoryLabels, expenseData) => {
        const ctxExpense = document.getElementById('expenseChart').getContext('2d');
        if (window.expenseChartInstance) {
            window.expenseChartInstance.destroy();
        }

        window.expenseChartInstance = new Chart(ctxExpense, {
            type: 'pie',
            data: {
                labels: categoryLabels,
                datasets: [{
                    label: 'Ausgegeben',
                    data: expenseData,
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Ausgaben' }
                }
            }
        });
    };

    window.renderIncomeChart = (categoryLabels, incomeData) => {
        const ctxIncome = document.getElementById('incomeChart').getContext('2d');
        if (window.incomeChartInstance) {
            window.incomeChartInstance.destroy();
        }

        window.incomeChartInstance = new Chart(ctxIncome, {
            type: 'pie',
            data: {
                labels: categoryLabels,
                datasets: [{
                    label: 'Eingenommen',
                    data: incomeData,
                    backgroundColor: ['#66ff66', '#3399ff', '#ffcc66', '#66ccff', '#ff66ff', '#66ffcc'],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Einnahmen' }
                }
            }
        });
    };

</script>
